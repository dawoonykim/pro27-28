<?xml version="1.0" encoding="UTF-8"?>

<!-- viewResolver, js나 이미지 같은 리소스 경로, 어노테이션 설정 등 프로젝트 생성시 자동으로 만들어짐 -->

<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- <context:component-scan base-package="com.myspring.pro27" /> -->
	<!-- <context:component-scan base-package="com.myspring.pro27a" /> -->
	<context:component-scan
		base-package="com.myspring" />
	<!-- <context:component-scan base-package="com.myspring.pro27a" /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 효율적으로 서비스를 제공하여 /resources/**에 대한 HTTP GET 요청을 처리합니다. ${webappRoot}/resources 
		디렉터리에 정적 리소스를 추가합니다. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- @Controller가 렌더링 하기 위해 선택한 뷰를 /WEB-INF/views 디렉토리에 .jsp 리소스로 확인합니다. -->
	<!-- ViewResolver -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix"
			value="/WEB-INF/views/member/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- ViewResolver를 Tiles로 대체 -->
	<!-- ViewResolver를 InternalResourceViewResolver 대신해서 UrlBasedViewResolver(타일즈로) 
		대체 -->

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>

	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/*.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 멀티파트 리졸버 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800" />
		<beans:property name="maxInMemorySize" value="1000000" />
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>

</beans:beans>